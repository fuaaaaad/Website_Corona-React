{"version":3,"sources":["Assets/Hospital.jpg","Assets/Med.jpg","Assets/Helpline.jpg","Assets/notification.png","API/Hospital Details/Posts_Hospital.js","API/Hospital Details/Hospital.js","API/MedicalCollege Details/Post_Medical.js","API/MedicalCollege Details/Med.js","components/Button.js","components/Navbar.js","components/pages/Home.js","API/Contact info/ContactNumber.js","API/Contact Link/ContactLink.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Posts","props","useState","click","state","setState","display","toggleHandler","Card","Body","className","style","width","onClick","Title","Text","ruralHospitals","ruralBeds","urbanHospitals","urbanBeds","totalHospitals","totalBeds","Hospital","posts","summary","selectedPostId","error","axios","get","then","response","console","log","updatedPosts","data","regional","map","post","textAign","this","asOn","Header","color","alignSelf","Footer","Component","name","city","ownership","admissionCapacity","hospitalBeds","key","index","Data","search","renderTable","elements","medicalColleges","styles","marginDown","padding","placeholder","aria-label","aria-describedby","Append","variant","striped","bordered","hover","STYLES","SIZES","Button","children","type","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","to","Navbar","setClick","button","setButton","closeMobileMenu","showButton","window","innerWidth","useEffect","addEventListener","class","Home","justifyContent","Img","src","require","alt","ImgOverlay","font","ContactNumber","loc","number","contacts","ContactLink","title","slice","href","link","notifications","App","hospital","toggleHander","Med","path","exact","component","Hosp","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.98d324f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Hospital.e93ed6ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Med.b3daae2a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Helpline.43e395f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/notification.76bec615.png\";","import React, { useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './Box-Hospital.css';\r\nimport {Pie} from 'react-chartjs-2';\r\n\r\nconst Posts = (props) =>{\r\n  const [state,setState] = useState({\r\n    click: false\r\n  })\r\n\r\n\r\n  let display = null;\r\n  \r\n  const toggleHandler = () => {\r\n    setState({\r\n        click: !state.click\r\n    })\r\n  }\r\n  if(!state.click){\r\n    display = (\r\n    <Card.Body className = 'box' style={{ width: '18rem' }} onClick = {toggleHandler}>\r\n     <Card.Title>{props.state}</Card.Title>\r\n     <Card.Text>\r\n      \r\n     Click to know about the informations in {props.state}\r\n     <br />\r\n        </Card.Text>\r\n    </Card.Body>\r\n  )\r\n    }\r\n    else{\r\n      display = (\r\n        <Card.Body  className = 'box' style={{ width: '18rem'}} onClick = {toggleHandler}>\r\n        <Card.Title>{props.state}</Card.Title>\r\n        <Card.Text>\r\n           Total Rural Hospitals: {props.ruralHospitals}\r\n           </Card.Text>\r\n           <Card.Text>\r\n           Total Rural Beds:  {props.ruralBeds}\r\n           </Card.Text>\r\n           <Card.Text>\r\n           \r\n           Total Urban Hospital: {props.urbanHospitals}\r\n           </Card.Text>\r\n           <Card.Text>\r\n           \r\n           Total Urban Beds: {props.urbanBeds}\r\n           </Card.Text>\r\n           <Card.Text>\r\n           \r\n           Total Hospitals: {props.totalHospitals}\r\n           </Card.Text>\r\n           <Card.Text>\r\n            Total Beds: {props.totalBeds}\r\n         </Card.Text>\r\n       </Card.Body>\r\n      \r\n   )\r\n     }\r\n    return (\r\n      <div >\r\n\r\n\r\n      {display}\r\n\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Posts;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Posts from './Posts_Hospital';\r\nimport { Card } from 'react-bootstrap';\r\nimport './Box-Hospital.css';\r\n\r\nclass Hospital extends Component {\r\n  state = {\r\n    posts: [],\r\n    summary: [],\r\n    selectedPostId: null,\r\n    error: false\r\n}\r\n  componentDidMount() {\r\n   axios.get('https://api.rootnet.in/covid19-in/hospitals/beds')\r\n    .then(response =>{\r\n      console.log(response)\r\n      const posts = response.data.data.regional\r\n      const updatedPosts = posts.map(post => {\r\n          return {\r\n              ...post,\r\n          }\r\n    })\r\n    this.setState({posts: updatedPosts}                 );\r\n    console.log(response);\r\n})\r\n\r\n\r\n  }\r\n\r\n  render(){\r\n    let posts = <p style={{textAign:'center'}}>Something went wrong!</p>\r\n    let summary = <p style={{textAign:'center'}}>Something went wrong!</p>\r\n    if(!this.state.error){\r\n      posts = this.state.posts.map(post => {\r\n          return <Posts \r\n          state = {post.state}\r\n          ruralHospitals = {post.ruralHospitals}\r\n          ruralBeds = {post.ruralBeds}\r\n          urbanHospitals = {post.urbanHospitals}\r\n          urbanBeds = {post.urbanBeds}\r\n          totalHospitals = {post.totalHospitals}\r\n          totalBeds = {post.totalBeds} \r\n          asOn = {post.asOn}\r\n      />\r\n\r\n})\r\n}\r\n\r\n\r\n\r\n   \r\n    return (\r\n      <div className = \"Data\">\r\n      <Card.Header style = {{color: 'white' ,alignSelf: 'center'}}>Hospitals and Beds</Card.Header>\r\n        <Card.Body>\r\n          <Card.Title style = {{color: 'white'}}>Summary</Card.Title>\r\n          <Card.Text style = {{color: 'white'}}>\r\n            Total Rural Hospitals: 39620\r\n            <br />\r\n            Total Rural Beds: 559176 \r\n            <br />\r\n            Total Urban Hospital: 7544\r\n            <br />\r\n            Total Urban Beds: 862346\r\n            <br />\r\n            Total Hospitals: 47164\r\n            <br />\r\n            Total Beds:  1421522\r\n          </Card.Text>\r\n        </Card.Body>\r\n      <Card.Footer className=\"text-muted\">Last updated April 26 2020</Card.Footer>\r\n        <br />\r\n        <div className = \"grid\">\r\n         {posts}\r\n         </div>\r\n      </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Hospital;\r\n\r\n\r\n/*</div>Total Rural Beds:\r\n            Total Urban Hospital:\r\n            Total Hospitals:\r\n            Total Beds:\r\n            \r\n            axios.get('https://api.rootnet.in/covid19-in/hospitals/beds')\r\n.then(resp =>{\r\n  console.log(resp)\r\n  const summary = resp.data.data.summary\r\n  const updatedSummary = summary.map(sum => {\r\n      return {\r\n          ...sum,\r\n      }\r\n})\r\nthis.setState({summary: updatedSummary}                 );\r\nconsole.log(resp);\r\n})\r\n\r\n\r\nif(!this.state.error){\r\n  summary = this.state.summary.map(sum => {\r\n      return   <Card.Text>\r\n        Total Rural Beds:\r\n            Total Urban Hospital:\r\n            Total Hospitals:\r\n            Total Beds:\r\n    </Card.Text>\r\n\r\n})\r\n}*/","import React, { useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './Box.css'\r\n\r\nconst Posts = (props) =>{\r\n  const [state,setState] = useState({\r\n    click: false\r\n  })\r\n\r\n  let display = null;\r\n  \r\n  const toggleHandler = () => {\r\n    setState({\r\n        click: !state.click\r\n    })\r\n  }\r\n\r\n  if(!state.click){\r\n  display = (\r\n  <Card.Body className = 'box' style={{ width: '18rem' }} onClick = {toggleHandler}>\r\n   <Card.Title>{props.state}</Card.Title>\r\n   <Card.Text>\r\n   State : {props.state}\r\n   <br />\r\n      </Card.Text>\r\n  </Card.Body>\r\n)\r\n  }\r\n  else{\r\n   display = (\r\n    <Card.Body className = 'box' style={{ width: '18rem' }} onClick = {toggleHandler}>\r\n     <Card.Title>{props.state}</Card.Title>\r\n     <Card.Text>\r\n     State : {props.state}\r\n     <br />\r\n      Name : {props.name}\r\n      <br />\r\n      City : {props.city}\r\n      <br />\r\n      Ownership : {props.ownership}\r\n      <br />\r\n      Admission capacity : {props.admissionCapacity}\r\n      <br />\r\n      Hospital beds : {props.hospitalBeds}\r\n        </Card.Text>\r\n    </Card.Body>\r\n)\r\n  }\r\n\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div key={props.index}>\r\n          {display}\r\n          </div>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Posts;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Post from './Post_Medical';\r\nimport { Card } from 'react-bootstrap';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport './Box.css';\r\n\r\nclass Data extends Component {\r\n  state = {\r\n    posts: [],\r\n    selectedPostId: null,\r\n    error: false,\r\n    click: false,\r\n    search: ''\r\n}\r\n  componentDidMount() {\r\n    axios.get('https://api.rootnet.in/covid19-in/hospitals/medical-colleges')\r\n    .then(response =>{\r\n      console.log(response)\r\n      const posts = response.data.data.medicalColleges\r\n      const updatedPosts = posts.map(post => {\r\n          return {\r\n              ...post,\r\n          }\r\n    })\r\n    this.setState({posts: updatedPosts});\r\n    console.log(response);\r\n})\r\n  }\r\n  renderTable = (elements,index) =>{\r\n    return(\r\n      <tr key ={index}>\r\n      <td style = {{color: 'white'}}>{elements.state}</td>\r\n      <td style = {{color: 'white'}}>{elements.name}</td>\r\n      <td style = {{color: 'white'}}>{elements.city}</td>\r\n      <td style = {{color: 'white'}}>{elements.ownership}</td>\r\n      <td style = {{color: 'white'}}>{elements.admissionCapacity}</td>\r\n      <td style = {{color: 'white'}}>{elements.hospitalBeds}</td>\r\n    </tr>\r\n    )\r\n  }\r\n\r\n\r\n  render(){\r\n    let posts = <p style={{textAign:'center'}}>Something went wrong!</p>\r\n    let temporary = <div className = \"grid\">{posts}</div>\r\n    let table = null\r\n    if(!this.state.error){\r\n      posts = this.state.posts.map((post,index) => {\r\n          return <div>\r\n            <Post \r\n          click = {this.state.click}\r\n          index = {index}\r\n          state = {post.state}\r\n          name = {post.name}\r\n          city = {post.city}\r\n          ownership = {post.ownership}\r\n          admissionCapacity = {post.admissionCapacity}\r\n          hospitalBeds = {post.hospitalBeds}\r\n      \r\n      />\r\n      </div>\r\n        })\r\n      }\r\n\r\n    return (\r\n      <div className=\"App\" styles = {{marginDown: '10 px'}}>\r\n      <Card.Header style = {{color: 'white'}}>Medical colleges and Beds</Card.Header>\r\n        <Card.Body>\r\n\r\n          <Card.Text>\r\n\r\n          </Card.Text>\r\n        </Card.Body>\r\n      <Card.Footer className=\"text-muted\">Last updated April 26 2020</Card.Footer>\r\n    <div>\r\n  \r\n\r\n  <ReactBootStrap.InputGroup className=\"mb-3\" styles = {{padding: '10px 10px'}} >\r\n    <ReactBootStrap.FormControl\r\n      placeholder=\"Search\"\r\n      aria-label=\"Recipient's username\"\r\n      aria-describedby=\"basic-addon2\"\r\n    />\r\n    <ReactBootStrap.InputGroup.Append>\r\n      <ReactBootStrap.Button variant=\"outline-secondary\">Search</ReactBootStrap.Button>\r\n    </ReactBootStrap.InputGroup.Append>\r\n  </ReactBootStrap.InputGroup>\r\n\r\n\r\n\r\n</div>\r\n\r\n    <ReactBootStrap.Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th style = {{color: 'white'}}>State</th>\r\n      <th style = {{color: 'white'}}>Name</th>\r\n      <th style = {{color: 'white'}}>city</th>\r\n      <th style = {{color: 'white'}}>ownership</th>\r\n      <th style = {{color: 'white'}}>Admission Capacity</th>\r\n      <th style = {{color: 'white'}}>Hospital Beds</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {this.state.posts.map(this.renderTable)}\r\n  </tbody>\r\n</ReactBootStrap.Table>\r\n\r\n      </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Data;\r\n","\r\nimport React from 'react';\r\nimport './Button.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\r\n\r\nconst SIZES = ['btn--medium', 'btn--large'];\r\n\r\nexport const Button = ({\r\n  children,\r\n  type,\r\n  onClick,\r\n  buttonStyle,\r\n  buttonSize\r\n}) => {\r\n  const checkButtonStyle = STYLES.includes(buttonStyle)\r\n    ? buttonStyle\r\n    : STYLES[0];\r\n\r\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n  return (\r\n    <Link to='/sign-up' className='btn-mobile'>\r\n      <button\r\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n        onClick={onClick}\r\n        type={type}\r\n      >\r\n        {children}\r\n      </button>\r\n    </Link>\r\n  );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Button } from './Button';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  window.addEventListener('resize', showButton);\r\n\r\n  return (\r\n    <>\r\n      <nav className='navbar'>\r\n        <div className='navbar-container'>\r\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\r\n            Covid 19 \r\n            <i class='fab fa-typo3' />\r\n          </Link>\r\n          <div className='menu-icon' onClick={handleClick}>\r\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n          </div>\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n            <li className='nav-item'>\r\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/ContactLink'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Notifications & advisories:\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/Hospitals and Beds'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Hospital Dashboards\r\n              </Link>\r\n            </li>\r\n\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/ContactNumber'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Helpline Numbers\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {button && <Button buttonStyle='btn--outline'>SIGN UP</Button>}\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n   return( <div style = {{justifyContent: 'centre'}}>\r\n       <Link to = '/Hospitals and Beds'>\r\n       <Card className=\"bg-dark text-white\">\r\n       \r\n  <Card.Img src={require(\"../../Assets/Hospital.jpg\")}  alt=\"Card image\" />\r\n  <Card.ImgOverlay>\r\n    <Card.Title>Hospitals and Beds</Card.Title>\r\n    <Card.Text>\r\n      Get live update on the hospitals around you. \r\n      Click to redirect to this page\r\n    </Card.Text>\r\n    <Card.Text>Last updated 5 months ago</Card.Text>\r\n  </Card.ImgOverlay>\r\n</Card>\r\n    </Link>\r\n\r\n\r\n    <Link to = '/Medical Colleges and Beds'>\r\n       <Card className=\"bg-dark text-white\">\r\n       \r\n  <Card.Img src={require(\"../../Assets/Med.jpg\")}  alt=\"Card image\" />\r\n  <Card.ImgOverlay>\r\n    <Card.Title>Medical Colleges and Beds</Card.Title>\r\n    <Card.Text>\r\n    Get live update on the medical colleges around you.\r\n    Click to redirect to this page\r\n    </Card.Text>\r\n    <Card.Text>Last updated 5 months ago</Card.Text>\r\n  </Card.ImgOverlay>\r\n</Card>\r\n    </Link>\r\n\r\n    <Link to = '/ContactNumber'>\r\n    <Card className=\"bg-dark text-white\">\r\n       \r\n       <Card.Img src={require(\"../../Assets/Helpline.jpg\")}  alt=\"Card image\" />\r\n       <Card.ImgOverlay>\r\n         <Card.Title style = {{color: 'black'}}>Helpline and Contact number</Card.Title>\r\n         <Card.Text style = {{color: 'black'}}>\r\n           Here is a list of Helpline numbers which you can contact in times of emergency. \r\n           Click to redirect to this page\r\n         </Card.Text>\r\n         <Card.Text style = {{color: 'black'}}>Last updated 5 months ago</Card.Text>\r\n       </Card.ImgOverlay>\r\n     </Card>\r\n    </Link>\r\n\r\n    <Link to = '/ContactInfo'>\r\n    <Card className=\"bg-dark text-white\">       \r\n       <Card.Img src={require(\"../../Assets/notification.png\")}  alt=\"Card image\" />\r\n       <Card.ImgOverlay>\r\n         <Card.Title style ={{ font: 'black'}}>Notifications and Advisories</Card.Title>\r\n         <Card.Text style ={{ font: 'black'}}>\r\n           Here are a few Website Links which will give you enough informations about the covid-19.\r\n           Click to redirect to this page\r\n         </Card.Text>\r\n         <Card.Text>Last updated 5 months ago</Card.Text>\r\n       </Card.ImgOverlay>\r\n     </Card>\r\n    </Link>\r\n    \r\n \r\n    </div>\r\n   )\r\n}\r\n\r\nexport default Home;\r\n\r\n/*          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n            <li className='nav-item'>\r\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/ContactLink'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Notifications & advisories:\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/Hospitals and Beds'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Hospital Dashboards\r\n              </Link>\r\n            </li>\r\n\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/ContactNumber'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Helpline Numbers\r\n              </Link>\r\n            </li>\r\n          </ul> */","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Card } from 'react-bootstrap';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\n\r\nclass ContactNumber extends Component {\r\n  state = {\r\n    posts: [],\r\n    selectedPostId: null,\r\n    error: false,\r\n    click: false\r\n}\r\n  componentDidMount() {\r\n    axios.get('https://api.rootnet.in/covid19-in/contacts')\r\n    .then(response =>{\r\n      console.log(response)\r\n      const posts = response.data.data.contacts.regional;\r\n      const updatedPosts = posts.map(post => {\r\n          return {\r\n              ...post,\r\n          }\r\n    })\r\n    this.setState({posts: updatedPosts});\r\n    console.log(response);\r\n})\r\n  }\r\n  renderTable = (elements,index) =>{\r\n    return(\r\n      <tr key ={index}>\r\n      <td style = {{color: 'white'}}>{elements.loc}</td>\r\n      <td style = {{color: 'white'}}>{elements.number}</td>\r\n    </tr>\r\n    )\r\n  }\r\n\r\n\r\n  render(){\r\n    let posts = <p style={{textAign:'center'}}>Something went wrong!</p>\r\n    let temporary = <div className = \"grid\">{posts}</div>\r\n    let table = null\r\n  \r\n\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n\r\n      <Card.Header style = {{color: 'white'}}>Helpline Numbers</Card.Header>\r\n        <Card.Body>\r\n          <Card.Text>\r\n\r\n          </Card.Text>\r\n        </Card.Body>\r\n      <Card.Footer className=\"text-muted\">Last updated April 26 2020</Card.Footer>\r\n\r\n    <ReactBootStrap.Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th style = {{color: 'white'}}>Location</th>\r\n      <th style = {{color: 'white'}}>Contact Number</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {this.state.posts.map(this.renderTable)}\r\n  </tbody>\r\n</ReactBootStrap.Table>\r\n\r\n      </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default ContactNumber;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Card } from 'react-bootstrap';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\n\r\nclass ContactLink extends Component {\r\n  state = {\r\n    posts: [],\r\n    selectedPostId: null,\r\n    error: false,\r\n    click: false\r\n}\r\n  componentDidMount() {\r\n    axios.get('https://api.rootnet.in/covid19-in/notifications')\r\n    .then(response =>{\r\n      console.log(response)\r\n      const posts = response.data.data.notifications;\r\n      const updatedPosts = posts.map(post => {\r\n          return {\r\n              ...post,\r\n          }\r\n    })\r\n    this.setState({posts: updatedPosts});\r\n    console.log(response);\r\n})\r\n  }\r\n  renderTable = (elements,index) =>{\r\n    return(\r\n      <tr key ={index}>\r\n       <td style = {{color: 'white'}}>{elements.title.slice(0,10)}</td>\r\n      <td style = {{color: 'white'}}>{elements.title}</td>\r\n    <td style = {{color: 'white'}}><a href = {elements.link} style = {{color: 'black'}}> Link</a></td>\r\n    </tr>\r\n    )\r\n  }\r\n\r\n\r\n  render(){\r\n    let posts = <p style={{textAign:'center'}}>Something went wrong!</p>\r\n    let temporary = <div className = \"grid\">{posts}</div>\r\n    let table = null\r\n  \r\n\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n      <Card.Header style = {{color: 'white', justifyContent: 'center'}}>Notifications and Advisories</Card.Header>\r\n        <Card.Body>\r\n          <Card.Text style = {{color: 'white'}}>\r\n              Click on Link to redirect to Guideline webpages\r\n          </Card.Text>\r\n        </Card.Body>\r\n      <Card.Footer className=\"text-muted\">Last updated April 26 2020</Card.Footer>\r\n\r\n\r\n    <ReactBootStrap.Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th style = {{color: 'white'}}>Date</th>\r\n      <th style = {{color: 'white'}}>Title</th>\r\n      <th style = {{color: 'white'}}>Link</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {this.state.posts.map(this.renderTable)}\r\n  </tbody>\r\n</ReactBootStrap.Table>\r\n\r\n      </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default ContactLink;","import React, { Component } from 'react';\nimport Hosp from './API/Hospital Details/Hospital';\nimport Med from './API/MedicalCollege Details/Med';\nimport {Button} from 'react-bootstrap';\nimport Navbar from './components/Navbar';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport ContactNumber from './API/Contact info/ContactNumber';\nimport ContactLink from './API/Contact Link/ContactLink';\n\nclass App extends Component {\n  state = {\n    hospital: false\n  }\n\n  toggleHander = () => {\n    this.setState({\n      hospital: !this.state.hospital\n    })\n  }\n\n\n  render(){\n    let display = null\n    if(this.state.hospital){\n      display = <Hosp />\n    }\n    else{\n      display = <Med />\n    }\n\n    return (\n      <div className=\"App\">\n    <Router>\n        <Navbar />\n\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path = '/Hospitals and Beds' component = {Hosp}/>\n          <Route path = '/Medical Colleges and Beds' component = {Med}/>\n          <Route path='/ContactLink' exact component={ContactLink} />\n          <Route path='/ContactNumber' exact component={ContactNumber} />\n        </Switch>\n    </Router>\n      </div>\n    );\n}\n}\n\nexport default App;\n\n\n/* */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}